/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module app

(function(){

  // controller berry.spider.baiduSpider

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.baiduSpider');

    berry.spider.baiduSpider.push = function(push, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/baidu/push-from-file' + abp.utils.buildQueryString([{ name: 'sourceFrom', value: push.sourceFrom }, { name: 'traceCode', value: push.traceCode }]) + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller berry.spider.common

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.common');

    berry.spider.common.txtDeDuplication = function(push, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/common/de-duplication',
        type: 'POST'
      }, ajaxParams));
    };

  })();

  // controller berry.spider.sogouSpider

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.sogouSpider');

    berry.spider.sogouSpider.push = function(push, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/sogou/push-from-file' + abp.utils.buildQueryString([{ name: 'sourceFrom', value: push.sourceFrom }, { name: 'traceCode', value: push.traceCode }]) + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller berry.spider.spider

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.spider');

    berry.spider.spider.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/get' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    berry.spider.spider.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/get-list' + abp.utils.buildQueryString([{ name: 'keyword', value: input.keyword }, { name: 'page', value: input.page }, { name: 'pageSize', value: input.pageSize }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    berry.spider.spider.getAll = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/get-all',
        type: 'GET'
      }, ajaxParams));
    };

    berry.spider.spider.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/create' + abp.utils.buildQueryString([{ name: 'name', value: input.name }, { name: 'from', value: input.from }, { name: 'remark', value: input.remark }]) + '',
        type: 'POST'
      }, ajaxParams));
    };

    berry.spider.spider.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/update' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'name', value: input.name }, { name: 'from', value: input.from }, { name: 'remark', value: input.remark }, { name: 'id', value: input.id }]) + '',
        type: 'PUT'
      }, ajaxParams));
    };

    berry.spider.spider['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/delete' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller berry.spider.spiderLifetime

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.spiderLifetime');

    berry.spider.spiderLifetime.getSpiderStatus = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider-lifetime/get-status',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller berry.spider.spiderPubAndRec

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.spiderPubAndRec');

    berry.spider.spiderPubAndRec.clearTodoTask = function(from, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spiderPubAndRec/clearTodoTask' + abp.utils.buildQueryString([{ name: 'from', value: from }]) + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller berry.spider.touTiaoSpider

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.touTiaoSpider');

    berry.spider.touTiaoSpider.push = function(push, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/toutiao/push-from-file' + abp.utils.buildQueryString([{ name: 'sourceFrom', value: push.sourceFrom }, { name: 'traceCode', value: push.traceCode }]) + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller berry.spider.openAI.spiderOpenAI

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.openAI.spiderOpenAI');

    berry.spider.openAI.spiderOpenAI.textGeneration = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/spider/openai/text-generation',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

  })();

  // controller berry.spider.biz.servMachine

  (function(){

    abp.utils.createNamespace(window, 'berry.spider.biz.servMachine');

    berry.spider.biz.servMachine.getByMachineName = function(machineName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/serv-machine/getByMachineName' + abp.utils.buildQueryString([{ name: 'machineName', value: machineName }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    berry.spider.biz.servMachine.getByConnectionId = function(connectionId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/serv-machine/getByConnectionId' + abp.utils.buildQueryString([{ name: 'connectionId', value: connectionId }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    berry.spider.biz.servMachine.online = function(online, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/serv-machine/online',
        type: 'POST',
        data: JSON.stringify(online)
      }, ajaxParams));
    };

    berry.spider.biz.servMachine.offline = function(offline, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/serv-machine/offline',
        type: 'POST',
        data: JSON.stringify(offline)
      }, ajaxParams));
    };

    berry.spider.biz.servMachine.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/serv-machine/getList' + abp.utils.buildQueryString([{ name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

})();


