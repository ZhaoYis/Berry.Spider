name: Build and Release .NET Core Console App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    env:
      ASPNETCORE_ENVIRONMENT: PROD
      
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          
      - name: Install curl
        run: |
          choco install curl
        shell: powershell
        
      - name: Install 7-Zip
        run: |
          choco install 7zip
        shell: powershell

      - name: Add 7-Zip to PATH
        run: echo "C:\Program Files\7-Zip" >> $GITHUB_PATH

      - name: Install jsonnet
        run: |
          curl -o jsonnet.zip -L https://github.com/google/jsonnet/releases/download/v0.17.0/jsonnet-bin-v0.17.0-windows.zip
          7z.exe x jsonnet.zip -y -o C:\jsonnet
          setx PATH "%PATH%;C:\jsonnet"
        shell: powershell

      - name: Merge appsettings files
        run: |
          jsonnet -o ${{ github.workspace }}/appsettings.json \
            ${{ github.workspace }}/appsettings.libsonnet \
            ${{ github.workspace }}/appsettings.${{ env.ENVIRONMENT }}.json
        env:
          ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}

      - name: Restore Dependencies
        run: dotnet restore src/Berry.Spider.Consumers/Berry.Spider.Consumers.csproj

      - name: Build Application
        run: dotnet build src/Berry.Spider.Consumers/Berry.Spider.Consumers.csproj -c Release

      - name: Publish Application
        run: dotnet publish src/Berry.Spider.Consumers/Berry.Spider.Consumers.csproj -c Release -o ${{ github.workspace }}/publish /p:Environment=${{ env.ENVIRONMENT }}
        env:
          ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Zip artifact
        run: |
          cd ${{ github.workspace }}/publish
          zip -r Berry.Spider.Consumers.zip Berry.Spider.Consumers
        shell: bash
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Berry.Spider.Consumers
          path: ${{ github.workspace }}/publish/Berry.Spider.Consumers.zip

      - name: Attach Artifact to Release
        id: attach_artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/publish/Berry.Spider.Consumers.zip
          asset_name: Berry.Spider.Consumers.zip
          asset_content_type: application/zip
